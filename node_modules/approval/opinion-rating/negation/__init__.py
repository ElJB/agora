# -*- coding: latin1 -*-

import re

removePosRe = re.compile("([\w.?!,;:]+)_[\w_]+")
def removePos(word):
	return removePosRe.match(word).group(1)

punctuation = ".?!,;:"
def negate(text):
	text = text.split(" ")
	textNoPos = map(lambda x: removePos(x), text)

	openNeg = False
	openNegIndex = None
	confirmNeg = False	

	for i in range(len(text)):
		if textNoPos[i] in punctuation:
			openNeg = False
			confirmNeg = False
			continue
		if confirmNeg:
			text[i] = "NOT_" + text[i]
		if textNoPos[i] in ["pas", "rien", "jamais", "plus", "gu√®re"]:
			if openNeg:
				confirmNeg = True
				for j in range(openNegIndex + 1, i):
					text[j] = "NOT_" + text[j]
				openNeg = False
		if textNoPos[i] in ["non"]:
			text[i + 1] = "NOT_" + text[i + 1]
		if textNoPos[i] == "ne":
			openNeg = True
			openNegIndex = i

	return " ".join(text)

__all__ = ["negate", "removePos"]