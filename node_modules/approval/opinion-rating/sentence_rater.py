# -*- coding: latin1 -*-

import psycopg2
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import TfidfVectorizer
from rabbitmq_rpc import RpcServer

conn = psycopg2.connect("dbname=boniface user=boniface password=blabla")

cur = conn.cursor()

cur.execute("SELECT lemma_sentence, information FROM corpus WHERE information IS NOT NULL")

rows = cur.fetchall()
sentences = [row[0] for row in rows]
information = [row[1] for row in rows]
del rows

vectorizer = TfidfVectorizer(binary=False, norm=False, use_idf=False)
classifier = MultinomialNB(alpha=0.8)

data = vectorizer.fit_transform(sentences)

classifier.fit(data.toarray(), information)

def predict(sentence):
	sentence = vectorizer.transform([sentence]).toarray()
	return classifier.predict(sentence)[0]

rpc_server = RpcServer('sentence_rating', predict)
