var Alpage = require('alpage-connector'),
	Q = require('q'),
	log = require('./log.js');

var sentenceRe = /[ABCDEFGHIJKLMNOPQRSTUVWXYZ][^\.?!]+[^ABCDEFGHIJKLMNOPQRSTUVWXYZ][\.?!]/g;


module.exports = function(speech){
	var lemmSentences = []
	
	return Q.promise(function(resolve, reject, notify){
		var sentences = speech.match(sentenceRe).filter(function(sentence){
			return sentence.match('[^\w]proposition[^\w]') || sentence.match('[^\w]texte[^\w]') || sentence.match('[^\w]projet[^\w]')
				|| sentence.match('[^\w]vote[^\w]');
		});

		var parseSentences = function(sentences){
			var sentence = sentences.splice(0, 1);

			var alpage = new Alpage(sentence);

			alpage.parse().then(function(result){
				lemmSentences.push([sentence, result.lemmaString()]);
			}).catch(log)
			.fin(function(){
				if( sentences.length ){
					parseSentences(sentences);
				} else {
					resolve(lemmSentences);

				}
			});
		}

		parseSentences(sentences);
	});
	

}
