/*
Module to parse a sentence and expose it as an object:
{ groups: 
   [ { id: 'E1G1', type: 'NV', words: [Object] },
     { id: 'E1G2', type: 'GN', words: [Object] },
     { id: 'E1G3', type: 'GN', words: [Object] },
     { id: 'E1G4', type: 'NV', words: [Object] },
     { id: 'E1G5', type: 'NV', words: [Object] },
     { id: 'E1G6', type: 'NV', words: [Object] },
     { id: 'E1G7', type: 'GA', words: [Object] } ],
  relations: 
   [ { type: 'SUJ-V', id: 'E1R3', sujet: 'E1F1', verbe: 'E1F2' },
     { type: 'SUJ-V', id: 'E1R2', sujet: 'E1F6', verbe: 'E1F7' },
     { type: 'SUJ-V', id: 'E1R1', sujet: 'E1F10', verbe: 'E1F11' },
     { type: 'AUX-V', id: 'E1R4', auxiliaire: 'E1F7', verbe: 'E1F8' },
     { type: 'COD-V', id: 'E1R6', cod: 'E1F5', verbe: 'E1F8' },
     { type: 'COD-V', id: 'E1R5', cod: 'E1F4', verbe: 'E1F2' },
     { type: 'ATB-SO',
       id: 'E1R7',
       attribut: 'E1F12',
       verbe: 'E1F11',
       's-o': undefined },
     { type: 'MOD-N', id: 'E1R8', modifieur: 'E1F8', nom: 'E1F4' },
     { type: 'JUXT', id: 'E1R9', premier: 'E1F2', suivant: 'E1F11' } ] }
*/

var http = require('http'),
	Q = require('q'),
	parseXml = require('xml2js').parseString,
	iconvIsoUtf = new require('iconv').Iconv('latin1', 'utf8');

var parseTree = function(xmlTree){
	this.groups = xmlTree.Document.Sentence[0].G,
	this.relations = xmlTree.Document.Sentence[0].R;

	this.groups = this.groups.map(function(e){
		var group = e.$;
		group.words = e.W.map(function(f){ return f.$ });
		return group;
	});

	this.relations = this.relations.map(function(e){
		var relation = e.$;
		var keys = Object.keys(e);
		keys.splice(keys.indexOf('$'), keys.indexOf('$') + 1);
		for( i in keys ){
			relation[keys[i]] = e[keys[i]][0].$.ref;
		}
		return relation;
	});


}

var Alpage = function(sentence, maxAttempts){
	this.sentence = sentence;
	this.attempts = 0;
	this.deferred = Q.defer();
	this.maxAttempts = maxAttempts || 2;
}

Alpage.prototype.parse = function(){
	this._post();
	return this.deferred.promise;
}

Alpage.prototype._post = function(){
	var self = this;
	this.attempts += 1;
	console.log("Attempts: " + this.attempts);

	var headers = {
		Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
		"Content-Type": "multipart/form-data; boundary=----WebKitFormBoundary29zFhZa4iaQlBZMu",
		Origin: "http://alpage.inria.fr",
		Referer: "http://alpage.inria.fr/parserdemo",
		"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.104 Safari/537.36",
		"X-DevTools-Emulate-Network-Conditions-Client-Id": "78E6DC86-CCCC-B4E7-BE6C-3AA853571934"
	}

	var req = http.request({
		hostname: "alpage.inria.fr",
		path: "/alpes/parser.pl",
		method: "POST",
		headers: headers
	});

	req.on("response", function(res){
		var data = "";

		res.on("error", function(err){
			self.deferred.reject(err);
		});

		res.on("data", function(chunk){
			data += chunk;
		});

		res.on("end", function(){
			if( !data.length && self.attempts < self.maxAttempts){
				return self._post();
			}
			if( self.attempts >= self.maxAttempts ){
				return self.deferred.reject(new Error("Couldn't parse: " + self.sentence));
			}

			//convert string from ISO-8859-1 to UTF-8 to preserve latin characters
			data = iconvIsoUtf.convert(data).toString();

			parseXml(data, function(err, result){
				if( err ){ return self.deferred.reject(err); }
				self.deferred.resolve(new parseTree(result));
				self.attempts = 0;
			});
		});

	});

	var postData = "------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"grammar\"\r\n\r\n\
frmgtelr\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"forest\"\r\n\r\n\
passage\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"view\"\r\n\r\n\
none\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"disambiguate\"\r\n\r\
\nyes\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"sentence\"\r\n\r\n"
+ self.sentence + "\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; \
name=\"history\"\r\n\r\n<none>\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; \
name=\"hidden\"\r\n\r\n<none>\r\n------WebKitFormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; \
name=\"filename\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n------WebKitFormBoundary\
29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\"Action\"\r\n\r\nSubmit\r\n------WebKitFormBoundary29\
zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\".cgifields\"\r\n\r\nsave_history\r\n------WebKitFormBou\
ndary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\".cgifields\"\r\n\r\ndisambiguate\r\n------WebKitF\
ormBoundary29zFhZa4iaQlBZMu\r\nContent-Disposition: form-data; name=\".cgifields\"\r\n\r\nexamples\r\n------WebKit\
FormBoundary29zFhZa4iaQlBZMu--\r\n";



	req.write(postData);

	req.end();
}

module.exports = Alpage;