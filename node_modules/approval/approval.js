var lemmatize = require('lemmatize'),
	kue = require('kue'),
	jobs = kue.createQueue();

var cleanLemm = function(sentences){
	return Q.promise(function(resolve, reject, notify){
		resolve(sentences.map(function(item){
			return item[1];
		}));
	});	
}

var rateLemmSentences = function(sentences){
	var jobList = [],
		results = {},
		count = 0;

	return Q.promise(function(resolve, reject, notify){
		sentences.forEach(function(sentence){
			jobList.push(jobs.create('rating', {
				sentence: sentence
			}));
		});

		jobList.forEach(function(job){
			job.on("complete", function(result){
				if( !results[result] ){
					results[result] = 0;
				}
				results[result] += 1;
				count += 1;
				if( count == jobList.length ){
					resolve(results);
				}
			}).on("fail", function(){
				reject(new Error("Failed rating job"));
			});

		})

	})


}

module.exports = function(text){
	return Q.promise(function(resolve, reject, notify){
		lemmatize(text)
			.then(cleanLemm)
			.then(rateLemmSentences)
			.then(resolve)
			.catch(reject);
		});
}