var lemmatize = require('lemmatize'),
	kue = require('kue'),
	rpcClient = require('rabbit-rpc').Client,
	Q = require('q'),
	spawn = require('child_process').spawn,
	path = require('path');

var rater = new rpcClient('sentence_rating'),
	rabbit = spawn('rabbitmq-server'),
	raterServer = spawn('python', [path.resolve(__dirname, 'opinion-rating/sentence_rater.py').toString()]);

raterServer.stderr.on('data', function(data){
	console.log("sentence_rater process err:\n" + data.toString());
});
rabbit.stderr.on('data', function(data){
	console.log("rabbitmq-server process err:\n" + data.toString());
});

var cleanLemm = function(sentences){
	return Q.promise(function(resolve, reject, notify){
		resolve(sentences.map(function(item){
			return item[1];
		}));
	});	
}

var rateLemmSentences = function(sentences){
	var promises = [],
		results = {},
		count = 0;

	return Q.promise(function(resolve, reject, notify){
		sentences.forEach(function(sentence){
			promises.push(rater.call(sentence));
		});

		Q.all(promises)
			.then(resolve)
			.catch(reject);
	});


}

module.exports = function(text){
	return Q.promise(function(resolve, reject, notify){
		lemmatize(text)
			.then(cleanLemm)
			.then(rateLemmSentences)
			.then(resolve)
			.catch(reject);
		});
}