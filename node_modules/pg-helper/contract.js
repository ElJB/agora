var Contract = function(source){
	for( key in source ){
		this[key] = source[key];
	}
}

Contract.prototype.getColumns = function(){
	return this.columns.filter(function(e){
		return e.type.match(/SERIAL/) == null;
	}).map(function(e){
		return e.name;
	});
}

Contract.prototype.createTableString = function(){
	var result = "CREATE TABLE " + this.tableName + " (";
	for( i in this.columns ){
		result += this.columns[i].name + " " + this.columns[i].type + ", "; 
	}
	if( "constraint" in this && "unique" in this.constraint ){
		result += "UNIQUE (";
		for( i in this.constraint.unique ){
			result += this.constraint.unique[i] + ", ";
		}
		result = result.substring(0, result.length - 2) + "), ";
	}
	if( "constraint" in this && "foreignKey" in this.constraint ){
		result += "FOREIGN KEY (";
		for( i in this.constraint.foreignKey.key ){
			result += this.constraint.foreignKey.key[i] + ", ";
		}
		result = result.substring(0, result.length - 2) + ") REFERENCES ";
		result += this.constraint.foreignKey.referenceTable + "(";
		for( i in this.constraint.foreignKey.referenceKeys ){
			result += this.constraint.foreignKey.referenceKeys[i] + ", ";
		}
		result = result.substring(0, result.length - 2) + "), ";
	}
	if( "constraint" in this && "primaryKey" in this.constraint ){
		result += "PRIMARY KEY (";
		for( i in this.constraint.primaryKey ){
			result += this.constraint.primaryKey[i] + ", ";
		}
		result = result.substring(0, result.length - 2) + "), ";
	}
	result = result.substring(0, result.length - 2) + ");";
	return result;
}

module.exports = Contract;